.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Custom CSS that can't be easily done with Tailwind */
.section-padding {
  padding: 100px 0;
}

@media (max-width: 768px) {
  .section-padding {
    padding: 70px 0;
  }
}

.gradient-text {
  background: linear-gradient(90deg, #64ffda 0%, #0a192f 100%);
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
}

.nav-shadow {
  box-shadow: 0 10px 30px -10px rgba(2, 12, 27, 0.7);
}

/* Cyberpunk styles */
.neon-text {
  text-shadow: 0 0 5px rgba(228, 33, 252, 0.8), 0 0 10px rgba(228, 33, 252, 0.5);
}

.cyber-card {
  position: relative;
  overflow: hidden;
  background-color: rgba(12, 12, 14, 0.7);
  backdrop-filter: blur(10px);
}

.cyber-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(90deg, transparent, rgba(228, 33, 252, 0.5), transparent);
  opacity: 0.7;
}

.cyber-card::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(90deg, transparent, rgba(0, 240, 255, 0.5), transparent);
  opacity: 0.7;
}

.cyber-grid {
  background-size: 30px 30px;
  background-position: center;
}

/* Glitch effect */
@keyframes glitch {
  0% {
    clip-path: polygon(0 2%, 100% 2%, 100% 5%, 0 5%);
    transform: translate(-3px, -3px);
  }
  2% {
    clip-path: polygon(0 15%, 100% 15%, 100% 15%, 0 15%);
    transform: translate(3px, 3px);
  }
  4% {
    clip-path: polygon(0 10%, 100% 10%, 100% 20%, 0 20%);
    transform: translate(-3px, 0);
  }
  6% {
    clip-path: polygon(0 1%, 100% 1%, 100% 2%, 0 2%);
    transform: translate(0, 3px);
  }
  8% {
    clip-path: polygon(0 25%, 100% 25%, 100% 30%, 0 30%);
    transform: translate(3px, 0);
  }
  9% {
    clip-path: polygon(0 50%, 100% 50%, 100% 55%, 0 55%);
    transform: translate(0, 0);
  }
  10% {
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
    transform: translate(0, 0);
  }
}

.glitch-effect {
  position: relative;
}

.glitch-effect:hover::before,
.glitch-effect:hover::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.2);
}

.glitch-effect:hover::before {
  color: #ff00ff;
  animation: glitch 2s infinite linear alternate-reverse;
  left: -2px;
}

.glitch-effect:hover::after {
  color: #00f0ff;
  animation: glitch 3s infinite linear alternate-reverse;
  left: 2px;
}

/* Scanline effect */
@keyframes scan {
  0% { transform: translateY(-100%); }
  100% { transform: translateY(100%); }
}

.animate-scan {
  animation: scan 3s linear infinite;
}

/* Thread effects */
.thread {
  position: absolute;
  background: linear-gradient(90deg, transparent, var(--thread-color), transparent);
  transform-origin: left center;
}

.thread-glow {
  filter: blur(3px);
  opacity: 0.7;
}
